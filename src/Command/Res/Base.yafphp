<?php

namespace Task;
use Medoo\Medoo;

abstract class Base{

    protected $params = [];
    public function __construct($params=[]){
        $this->setParams($params);
    }

    private function setParams($params = [])
    {
        if (!$params) {
            return;
        }
        $ret = [];
        $_ret = [];
        foreach ($params as $k => $v) {
            if (strpos($v, "-") === 0) {
                $_v = str_replace("-", "", $v);
                //一定是一个字符
                if (strlen($_v) == 1) {
                    //大小写范围
                    $_v_ac = ord(trim($_v));
                    if (($_v_ac >= ord("a") && $_v_ac <= ord('z'))
                        || ($_v_ac >= ord("A") && $_v_ac <= ord('Z'))
                    ) {
                        $ret[$k][$_v] = "";
                    }
                }
            } else {
                $_k = $k - 1;
                if (isset($ret[$_k])) {
                    //把上一个参数赋值
                    foreach ($ret[$_k] as $rk => $rv) {
                        $_ret[$rk] = $v;
                    }
                }
            }
        }
        $this->params = $_ret;
    }

    public function echoLog($msg=''){
        echo date('Y-m-d H:i:s').'=>'.$msg."\n";
        return true;
    }

    /**
     * @param string $configName
     * @return Medoo
     */
    protected function getMedoo(string $configName='master'):Medoo{
        $_config = \Yaf\Registry::get('_config');
        $options=[];
        if($_config->database->params->$configName){
            $options = $_config->database->params->$configName->toArray();
        }
        return new Medoo($options);
    }

    /**
     * @param string $type
     * @return \Redis
     */
    protected function getRedis(string $type = 'redis.app'):\Redis
    {
        $redis = new \Redis();
        $_redis_config = $this->config[$type];
        $redis->connect($_redis_config["host"], $_redis_config["port"]);
        if (isset($_redis_config["auth"]) && $_redis_config["auth"]) {
            $redis->auth($_redis_config["auth"]);
        }
        return $redis;
    }
}